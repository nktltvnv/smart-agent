# ===============================
# GENERAL CONFIGURATIONS
# ===============================
spring:
  application:
    name: smart-agent
  docker:
    compose:
      file:
        - compose.yaml
        - .docker/mcp-server/sequential-thinking/compose.yaml
        - .docker/mcp-server/web-content-fetch/compose.yaml
        - .docker/mcp-server/time-with-timezone/compose.yaml

# ===============================
# SECURITY CONFIGURATIONS
# ===============================
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:https://idp.example.com/issuer}

# ===============================
# CHAT CONFIGURATIONS (AI Model)
# ===============================
  ai:
    ollama:
      chat:
        model: ${CHAT_MODEL:qwen3}

# ===============================
# MCP CLIENT CONFIGURATIONS
# ===============================
    mcp:
      client:
        type: async
        toolcallback:
          enabled: true

# mcp-servers.json shares some MCP Servers with sse connections so consider using either stdio or sse configuration
# and switch client type above, or remove repeating MCP Servers.
# https://medium.com/@vkrishnan9074/mcp-clients-stdio-vs-sse-a53843d9aabb
#        stdio:
#          servers-configuration: classpath:mcp/config/mcp-servers.json
        sse:
          connections:
            sequential-thinking:
              url: ${SEQUENTIAL_THINKING_SERVER_URL:http://localhost:8020}
            web-crawling:
              url: ${WEB_CONTENT_FETCH_SERVER_URL:http://localhost:8021}
            time-with-timezone:
              url: ${TIME_WITH_TIMEZONE_SERVER_URL:http://localhost:8022}

# ===============================
# CHAT MEMORY (PostgreSQL)
# ===============================
  datasource:
    url: jdbc:postgresql://${PG_HOST:localhost}:${PG_PORT:15432}/${PG_DB:memory}
    username: ${PG_USER:memory_user}
    password: ${PG_PASSWORD:memory_password}